{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create a AWS cloud solution for edtech organization for Australia which contains 2 availability zones (ap-southeast-4 and ap-southeast-2)",
    "Parameters": {
        "PublicSubnetAZ1IPRange": {
            "Description": "Enter the IP range (CIDR) for the public subnet in the ap-southeast-4 Availability Zone",
            "Type": "String",
            "Default": "10.0.1.0/24"
        },
        "PublicSubnetAZ2IPRange": {
            "Description": "Enter the IP range (CIDR) for the public subnet in the ap-southeast-2 Availability Zone",
            "Type": "String",
            "Default": "10.0.2.0/24"
        },
        "WebLayerPrivateSubnetAZ1IPRange": {
            "Description": "Enter the IP range (CIDR) for the web layer private subnet in the ap-southeast-4 Availability Zone",
            "Type": "String",
            "Default": "10.0.3.0/24"
        },
        "WebLayerPrivateSubnetAZ2IPRange": {
            "Description": "Enter the IP range (CIDR) for the web layer private subnet in the ap-southeast-2 Availability Zone",
            "Type": "String",
            "Default": "10.0.4.0/24"
        },
        "AppLayerPrivateSubnetAZ1IPRange": {
            "Description": "Enter the IP range (CIDR) for the application layer private subnet in the ap-southeast-4 Availability Zone",
            "Type": "String",
            "Default": "10.0.5.0/24"
        },
        "AppLayerPrivateSubnetAZ2IPRange": {
            "Description": "Enter the IP range (CIDR) for the application layer private subnet in the ap-southeast-2 Availability Zone",
            "Type": "String",
            "Default": "10.0.6.0/24"
        },
        "DBLayerPrivateSubnetAZ1IPRange": {
            "Description": "Enter the IP range (CIDR) for the database layer private subnet in the ap-southeast-4 Availability Zone",
            "Type": "String",
            "Default": "10.0.7.0/24"
        },
        "DBLayerPrivateSubnetAZ2IPRange": {
            "Description": "Enter the IP range (CIDR) for the database layer private subnet in the ap-southeast-2 Availability Zone",
            "Type": "String",
            "Default": "10.0.8.0/24"
        }
    },
    "Resources": {
        "WAFWebACL": {
            "Type": "AWS::WAFv2::WebACL",
            "Properties": {
                "Name": "Firewall",
                "Scope": "CLOUDFRONT",
                "DefaultAction": {
                    "Allow": {}
                },
                "Rules": [
                    {
                        "Name": "FirewallRule",
                        "Priority": 1,
                        "Statement": {
                            "ManagedRuleGroupStatement": {
                                "VendorName": "AWS",
                                "Name": "AWSManagedRuleSet",
                                "ExcludedRules": [
                                    {
                                        "Name": "SizeRestrictions_BODY",
                                        "Scope": "CLOUDFRONT"
                                    }
                                ]
                            }
                        },
                        "Action": {
                            "Block": {}
                        },
                        "VisibilityConfig": {
                            "SampledRequestsEnabled": true,
                            "CloudWatchMetricsEnabled": true,
                            "MetricName": "WebAccessControl"
                        }
                    }
                ]
            }
        },
        "CloudFrontDistribution": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig": {
                    "Aliases": [
                        "edtech.com",
                        "www.edtech.com"
                    ],
                    "Origins": [
                        {
                            "DomainName": {
                                "Fn::GetAtt": [
                                    "LoadBalancer",
                                    "DNSName"
                                ]
                            },
                            "Id": "OriginId",
                            "CustomOriginConfig": {
                                "HTTPPort": 80,
                                "HTTPSPort": 443,
                                "OriginProtocolPolicy": "http-only"
                            }
                        }
                    ],
                    "Enabled": true,
                    "DefaultRootObject": "index.html",
                    "DefaultCacheBehavior": {
                        "TargetOriginId": "OriginId",
                        "ForwardedValues": {
                            "QueryString": false,
                            "Cookies": {
                                "Forward": "none"
                            }
                        },
                        "ViewerProtocolPolicy": "redirect-to-https"
                    },
                    "WebACLId": {
                        "Ref": "WAFWebACL"
                    }
                }
            }
        },
        "AWSShieldProtection": {
            "Type": "AWS::Shield::Protection",
            "Properties": {
                "Name": "MyShieldProtection",
                "ResourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:cloudfront::",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":distribution/",
                            {
                                "Ref": "CloudFrontDistribution"
                            }
                        ]
                    ]
                },
                "HealthCheckIds": []
            }
        },
        "AWSHostedZone": {
            "Type": "AWS::Route53::HostedZone",
            "Properties": {
                "Name": "edtech.com.",
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "WebLayerRecordSet": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneId": {
                    "Ref": "HostedZone"
                },
                "Name": "web.edtech.com.",
                "Type": "A",
                "AliasTarget": {
                    "DNSName": {
                        "Fn::GetAtt": [
                            "CloudFrontDistribution",
                            "DomainName"
                        ]
                    },
                    "HostedZoneId": "CloudFrontHostedZoneID"
                }
            }
        },
        "AppLayerRecordSet": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneId": {
                    "Ref": "HostedZone"
                },
                "Comment": "Application Layer Record Set",
                "Name": "app.edtech.com",
                "Type": "A",
                "AliasTarget": {
                    "HostedZoneId": {
                        "Ref": "HostedZone"
                    },
                    "DNSName": {
                        "Fn::ImportValue": {
                            "Fn::Sub": "AppLayerPrivateSubnetDNSName"
                        }
                    }
                }
            }
        },
        "DatabaseLayerRecordSet": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneId": {
                    "Ref": "HostedZone"
                },
                "Comment": "Database Layer Record Set",
                "Name": "db.edtech.com",
                "Type": "A",
                "ResourceRecords": [
                    {
                        "Fn::GetAtt": [
                            "DBSubnetGroup"
                        ]
                    }
                ],
                "TTL": "300"
            }
        },
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "VPC"
                    }
                ]
            }
        },
        "PublicSubnetAZ1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": "ap-southeast-4",
                "CidrBlock": {
                    "Ref": "PublicSubnetAZ1IPRange"
                },
                "MapPublicIpOnLaunch": true
            }
        },
        "PublicSubnetAZ2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": "ap-southeast-2",
                "CidrBlock": {
                    "Ref": "PublicSubnetAZ2IPRange"
                },
                "MapPublicIpOnLaunch": true
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "GatewayToInternet": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicRouteTableAZ1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "DependsOn": [
                "NATGatewayAZ1"
            ]
        },
        "PublicRouteTableAZ2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "DependsOn": [
                "NATGatewayAZ2"
            ]
        },
        "PublicRouteAZ1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTableAZ1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "NatGatewayId": {
                    "Ref": "NATGatewayAZ1"
                }
            },
            "DependsOn": [
                "NATGatewayAZ1"
            ]
        },
        "PublicRouteAZ2": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTableAZ2"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "NatGatewayId": {
                    "Ref": "NATGatewayAZ2"
                }
            },
            "DependsOn": [
                "NATGatewayAZ2"
            ]
        },
        "PublicSubnet1RouteTableAssociationAZ1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnetAZ1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTableAZ1"
                }
            }
        },
        "PublicSubnet1RouteTableAssociationAZ2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnetAZ2"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTableAZ2"
                }
            }
        },
        "NATGatewayAZ1": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnetAZ1"
                },
                "AllocationId": {
                    "Ref": "NatPublicIPAZ1"
                }
            }
        },
        "NATGatewayAZ2": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnetAZ2"
                },
                "AllocationId": {
                    "Ref": "NatPublicIPAZ2"
                }
            }
        },
        "NatPublicIPAZ1": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "NatPublicIPAZ2": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "PrivateRouteTableAZ1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "DependsOn": [
                "NATGatewayAZ1"
            ]
        },
        "PrivateRouteTableAZ2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "DependsOn": [
                "NATGatewayAZ2"
            ]
        },
        "PrivateRouteAZ1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "NatGatewayId": {
                    "Ref": "NATGatewayAZ1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTableAZ1"
                },
                "DestinationCidrBlock": "0.0.0.0/0"
            },
            "DependsOn": [
                "NATGatewayAZ1"
            ]
        },
        "PrivateRouteAZ2": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "NatGatewayId": {
                    "Ref": "NATGatewayAZ2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTableAZ2"
                },
                "DestinationCidrBlock": "0.0.0.0/0"
            },
            "DependsOn": [
                "NATGatewayAZ2"
            ]
        },
        "WebLayerPrivateSubnetRouteTableAssociationAZ1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "WebLayerPrivateSubnetAZ1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTableAZ1"
                }
            }
        },
        "WebLayerPrivateSubnetRouteTableAssociationAZ2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "WebLayerPrivateSubnetAZ2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTableAZ2"
                }
            }
        },
        "AppLayerPrivateSubnetRouteTableAssociationAZ1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "AppLayerPrivateSubnetAZ1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTableAZ1"
                }
            }
        },
        "AppLayerPrivateSubnetRouteTableAssociationAZ2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "AppLayerPrivateSubnetAZ2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTableAZ2"
                }
            }
        },
        "WebLayerPrivateSubnetAZ1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "WebLayerPrivateSubnetAZ1IPRange"
                },
                "AvailabilityZone": "ap-southeast-4",
                "MapPublicIpOnLaunch": false
            }
        },
        "WebLayerPrivateSubnetAZ2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "WebLayerPrivateSubnetAZ2IPRange"
                },
                "AvailabilityZone": "ap-southeast-2",
                "MapPublicIpOnLaunch": false
            }
        },
        "WebLayerELBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Web Layer ELB Security Group",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80"
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443"
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80"
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443"
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080"
                    }
                ]
            },
            "DependsOn": [
                "VPC"
            ]
        },
        "WebLayerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for the web layer",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    }
                ]
            },
            "DependsOn": [
                "VPC"
            ]
        },
        "AppLayerELBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "App Layer ELB Security Group",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "SourceSecurityGroupName": {
                            "Ref": "WebLayerELBSecurityGroup"
                        }
                    }
                ]
            },
            "DependsOn": [
                "VPC"
            ]
        },
        "AppLayerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for the app layer",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupName": {
                            "Ref": "AppLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupName": {
                            "Ref": "AppLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "SourceSecurityGroupName": {
                            "Ref": "AppLayerELBSecurityGroup"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupName": {
                            "Ref": "AppLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupName": {
                            "Ref": "AppLayerELBSecurityGroup"
                        }
                    },
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "SourceSecurityGroupName": {
                            "Ref": "AppLayerELBSecurityGroup"
                        }
                    }
                ]
            },
            "DependsOn": [
                "VPC"
            ]
        },
        "DBLayerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for the DB layer",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupName": {
                            "Ref": "AppLayerSecurityGroup"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "ipProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupName": {
                            "Ref": "AppLayerSecurityGroup"
                        }
                    }
                ]
            },
            "DependsOn": [
                "VPC"
            ]
        },
        "WebLayerEC2InstanceAZ1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": "t2.micro",
                "AvailabilityZone": "ap-southeast-4",
                "SubnetId": {
                    "Ref": "WebLayerPrivateSubnetAZ1"
                },
                "SecurityGroupIds": [
                    "WebLayerSecurityGroup"
                ]
            }
        },
        "WebLayerEC2InstanceAZ2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": "t2.micro",
                "AvailabilityZone": "ap-southeast-2",
                "SubnetId": {
                    "Ref": "WebLayerPrivateSubnetAZ2"
                },
                "SecurityGroupIds": [
                    "WebLayerSecurityGroup"
                ]
            }
        },
        "WebLayerELB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": "WebLayerELB",
                "AvailabilityZones": [
                    "ap-southeast-4",
                    "ap-southeast-2"
                ],
                "Instances": [
                    {
                        "Ref": "WebLayerEC2InstanceAZ1"
                    },
                    {
                        "Ref": "WebLayerEC2InstanceAZ2"
                    }
                ],
                "Listener": [
                    {
                        "LoadBalancerPort": "80",
                        "Protocol": "HTTPS",
                        "InstancePort": "80",
                        "InstanceProtocol": "HTTPS"
                    }
                ],
                "Subnets": [
                    "PublicSubnetAZ1",
                    "PublicSubnetAZ2"
                ],
                "SecurityGroups": [
                    "WebLayerELBSecurityGroup"
                ]
            }
        },
        "WebLayerELBHTTPSListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "LoadBalancerArn": {
                    "Ref": "WebLayerELB"
                },
                "Protocol": "HTTPS",
                "Port": "443",
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "WebLayerHTTPSELBTargetGroup"
                        }
                    }
                ],
                "Certificates": [
                    {
                        "CertificateArn": "SSLCertificate"
                    }
                ]
            }
        },
        "WebLayerELBHTTPListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "LoadBalancerArn": {
                    "Ref": "WebLayerELB"
                },
                "Protocol": "HTTP",
                "Port": "80",
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "WebLayerHTTPELBTargetGroup"
                        }
                    }
                ]
            }
        },
        "WebLayerELBTCPListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "LoadBalancerArn": {
                    "Ref": "WebLayerELB"
                },
                "Protocol": "TCP",
                "Port": "8080",
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "WebLayerTCPELBTargetGroup"
                        }
                    }
                ]
            }
        },
        "WebLayerHTTPSELBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Port": 443,
                "Protocol": "HTTPS",
                "Targets": [],
                "TargetType": "instance"
            }
        },
        "WebLayerHTTPELBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Port": 80,
                "Protocol": "HTTP",
                "Targets": [],
                "TargetType": "instance"
            }
        },
        "WebLayerTCPELBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Port": 8080,
                "Protocol": "TCP",
                "Targets": [],
                "TargetType": "instance"
            }
        },
        "AppLayerPrivateSubnetAZ1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "AppLayerPrivateSubnetAZ1IPRange"
                },
                "AvailabilityZone": "ap-southeast-4",
                "MapPublicIpOnLaunch": false
            }
        },
        "AppLayerPrivateSubnetAZ2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "AppLayerPrivateSubnetAZ2IPRange"
                },
                "AvailabilityZone": "ap-southeast-2",
                "MapPublicIpOnLaunch": false
            }
        },
        "AppLayerEC2InstanceAZ1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": "t2.micro",
                "SubnetId": {
                    "Ref": "AppLayerPrivateSubnetAZ1"
                },
                "SecurityGroupIds": [
                    "AppLayerSecurityGroup"
                ]
            }
        },
        "AppLayerEC2InstanceAZ2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": "t2.micro",
                "SubnetId": {
                    "Ref": "AppLayerPrivateSubnetAZ2"
                },
                "SecurityGroupIds": [
                    "AppLayerSecurityGroup"
                ]
            }
        },
        "AppLayerELB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": "AppLayerELB",
                "AvailabilityZones": [
                    "ap-southeast-4",
                    "ap-southeast-2"
                ],
                "Instances": [
                    {
                        "Ref": "AppLayerEC2InstanceAZ1"
                    },
                    {
                        "Ref": "AppLayerEC2InstanceAZ2"
                    }
                ],
                "Listener": [
                    {
                        "LoadBalancerPort": "81",
                        "Protocol": "HTTPS",
                        "InstancePort": "81",
                        "InstanceProtocol": "HTTPS"
                    }
                ],
                "SubnetId": [
                    "AppLayerPrivateSubnetAZ1",
                    "AppLayerPrivateSubnetAZ2"
                ],
                "SecurityGroups": [
                    "WebLayerELBSecurityGroup"
                ]
            }
        },
        "AppLayerHTTPSELBListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "LoadBalancerArn": {
                    "Ref": "AppLayerELB"
                },
                "Protocol": "HTTPS",
                "Port": "443",
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "AppLayerHTTPSELBTargetGroup"
                        }
                    }
                ],
                "Certificates": [
                    {
                        "CertificateArn": "SSLCertificate"
                    }
                ]
            }
        },
        "AppLayerHTTPELBListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "LoadBalancerArn": {
                    "Ref": "AppLayerELB"
                },
                "Protocol": "HTTP",
                "Port": "80",
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "AppLayerHTTPELBTargetGroup"
                        }
                    }
                ]
            }
        },
        "AppLayerTCPELBListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "LoadBalancerArn": {
                    "Ref": "AppLayerELB"
                },
                "Protocol": "TCP",
                "Port": "8080",
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "AppLayerTCPELBTargetGroup"
                        }
                    }
                ]
            }
        },
        "AppLayerHTTPSELBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Protocol": "HTTPS",
                "Port": "443",
                "Targets": [],
                "TargetType": "instance"
            }
        },
        "AppLayerHTTPELBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Protocol": "HTTP",
                "Port": "80",
                "Targets": [],
                "TargetType": "instance"
            }
        },
        "AppLayerTCPELBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Protocol": "TCP",
                "Port": "8080",
                "Targets": [],
                "TargetType": "instance"
            }
        },
        "WebLayerLaunchTemplate": {
            "Type": "AWS::EC2::LaunchTemplate",
            "Properties": {
                "LaunchTemplateName": {
                    "Fn::Sub": "${AWS::StackName}-launch-template"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "WebLayerSecurityGroup"
                    }
                ]
            },
            "UserData": {
                "Fn::Base64": {
                    "Fn::Join": [
                        "",
                        [
                            "#!/bin/bash\n",
                            "yum update -y\n",
                            "yum install -y httpd\n",
                            "systemctl start httpd\n",
                            "systemctl enable httpd\n",
                            "echo \"<h1>Hello World!</h1>\" > /var/www/html/index.html"
                        ]
                    ]
                }
            }
        },
        "AppLayerLaunchTemplate": {
            "Type": "AWS::EC2::LaunchTemplate",
            "Properties": {
                "LaunchTemplateName": {
                    "Fn::Sub": "${AWS::StackName}-launch-template"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "AppLayerSecurityGroup"
                    }
                ]
            },
            "UserData": {
                "Fn::Base64": {
                    "Fn::Join": [
                        "",
                        [
                            "#!/bin/bash\n",
                            "yum update -y\n",
                            "yum install -y httpd\n",
                            "systemctl start httpd\n",
                            "systemctl enable httpd\n",
                            "echo \"<h1>Hello World!</h1>\" > /var/www/html/index.html"
                        ]
                    ]
                }
            }
        },
        "WebServerGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": [
                    "ap-southeast-4",
                    "ap-southeast-2"
                ],
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "WebLayerLaunchTemplate"
                    }
                },
                "TargetGroupARNs": [
                    {
                        "Ref": "WebLayerELBTargetGroup"
                    }
                ],
                "VPCZoneIdentifier": {
                    "Ref": "Subnets"
                }
            }
        },
        "AppServerGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": [
                    "ap-southeast-4",
                    "ap-southeast-2"
                ],
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "AppLayerLaunchTemplate"
                    }
                },
                "TargetGroupARNs": [
                    {
                        "Ref": "AppLayerELBTargetGroup"
                    }
                ],
                "VPCZoneIdentifier": {
                    "Ref": "Subnets"
                }
            }
        },
        "S3": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "Name": "S3"
            }
        },
        "ElasticCache": {
            "Type": "AWS::ElastiCache::CacheCluster",
            "Properties": {
                "CacheNodeType": "cache.t2.micro"
            }
        },
        "DBLayerPrivateSubnetAZ1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "DBLayerPrivateSubnetAZ1IPRange"
                },
                "AvailabilityZone": "ap-southeast-4",
                "MapPublicIpOnLaunch": false
            }
        },
        "DBLayerPrivateSubnetAZ2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "DBLayerPrivateSubnetAZ2IPRange"
                },
                "AvailabilityZone": "ap-southeast-2",
                "MapPublicIpOnLaunch": false
            }
        },
        "DBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "",
                "DBSubnetGroupName": "DynamoDBSubnetGroup",
                "SubnetIds": [
                    "DBLayerPrivateSubnetAZ1",
                    "DBLayerPrivateSubnetAZ2"
                ]
            }
        },
        "DynamoDBPrimary": {
            "Type": "AWS::DynamoDB::GlobalTable",
            "Properties": {
                "Name": "edTechMasterTable"
            }
        },
        "DynamoDBBackup": {
            "Type": "AWS::DynamoDB::GlobalTable",
            "Properties": {
                "Name": "edTechMasterBackupTable"
            },
            "DependsOn": [
                "DynamoDBPrimary"
            ]
        },
        "Glacier": {
            "Type": "AWS::Glacier::Vault",
            "Properties": {
                "VaultName": "Glacier"
            }
        },
        "Error400Alarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmName": "HTTP400ErrorAlarm",
                "AlarmDescription": "Alarm for monitoring HTTP 400 error",
                "Namespace": "AWS/ELB",
                "MetricName": "HTTPCode_Backend_400",
                "Dimensions": [
                    {
                        "Name": "LoadBalancerName",
                        "Value": "WebLayerELB"
                    }
                ],
                "Statistic": "SampleCount",
                "Period": 60,
                "EvaluationPeriods": 1,
                "Threshold": 100,
                "ComparisonOperator": "GreaterThanThreshold",
                "AlarmActions": [
                    {
                        "Ref": "SNSTopic"
                    }
                ]
            }
        },
        "SNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "TopicName": "HTTP400ErrorTopic"
            }
        },
        "SNSPolicy": {
            "Type": "AWS::SNS::TopicPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Id": "SNSPolicy",
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "AllowCloudWatchAlarms",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudwatch.amazonaws.com"
                            },
                            "Action": "sns:Publish",
                            "Resource": {
                                "Ref": "SNSTopic"
                            }
                        }
                    ]
                },
                "Topics": [
                    {
                        "Ref": "SNSTopic"
                    }
                ]
            }
        },
        "AdminEmailSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
                "Endpoint": "admin@edtech.com",
                "Protocol": "email",
                "TopicArn": {
                    "Ref": "SNSTopic"
                }
            }
        }
    },
    "Outputs": {
        "CloudFrontURL": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Ref": "CloudFrontDistribution"
                        }
                    ]
                ]
            }
        }
    }
}